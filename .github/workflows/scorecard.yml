---
name: 'Scorecard'
on:  # yamllint disable-line rule:truthy
  # For Branch-Protection check. Only the default branch is supported. See
  # https://github.com/ossf/scorecard/blob/main/docs/checks.md#branch-protection
  branch_protection_rule: {}
  # To guarantee Maintained check is occasionally updated. See
  # https://github.com/ossf/scorecard/blob/main/docs/checks.md#maintained
  schedule:
    - cron: '43 17 * * 4'
  push:
    branches:
      - 'main'

  workflow_dispatch: {}

# Declare default permissions as read only.
permissions: 'read-all'

jobs:
  check-secrets:
    name: 'Check if required secrets are available'
    runs-on: 'ubuntu-22.04'
    permissions:
      contents: 'read'
    outputs:
      secrets-defined: '${{ steps.secret-check.outputs.secrets-defined }}'
    steps:
      - name: 'Harden Runner'
        uses: 'step-security/harden-runner@5c7944e73c4c2a096b17a9cb74d65b6c2bbafbde' # v2.9.1
        with:
          disable-sudo: true
          egress-policy: 'block'

      - name: 'Check if all required secrets are defined'
        id: 'secret-check'
        shell: 'bash'
        run: |
          # fail if:
          # - a variable is unbound
          # - any command fails
          # - a command in a pipe fails
          # - a command in a sub-shell fails
          set -Eeuo pipefail

          [[ "${{ secrets.SCORECARD_TOKEN }}" != '' ]] || {
            echo "secrets-defined=false" >> "${GITHUB_OUTPUT}";
            exit 0;
          };

          # secrets not empty, so assuming defined
          echo "secrets-defined=true" >> "${GITHUB_OUTPUT}";

  analysis:
    name: 'Scorecard analysis'
    if: "needs.check-secrets.outputs.secrets-defined == 'true'"
    needs: 'check-secrets'
    runs-on: 'ubuntu-22.04'
    permissions:
      # Needed to upload the results to code-scanning dashboard.
      security-events: 'write'
      # Needed to publish results and get a badge (see publish_results below).
      id-token: 'write'
      # Uncomment the permissions below if installing in a private repository.
      # contents: read
      # actions: read

    steps:
      - name: 'Harden Runner'
        uses: 'step-security/harden-runner@5c7944e73c4c2a096b17a9cb74d65b6c2bbafbde' # v2.9.1
        with:
          egress-policy: 'block'
          disable-sudo: true
          allowed-endpoints: >
            api.github.com:443
            api.deps.dev:443
            api.osv.dev:443
            api.scorecard.dev:443
            api.securityscorecards.dev:443
            fulcio.sigstore.dev:443
            github.com:443
            ghcr.io:443
            oss-fuzz-build-logs.storage.googleapis.com:443
            pkg-containers.githubusercontent.com:443
            rekor.sigstore.dev:443
            tuf-repo-cdn.sigstore.dev:443
            www.bestpractices.dev:443

      - name: 'Checkout the repository'
        uses: 'actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332' # v4.1.7
        with:
          persist-credentials: false

      - name: 'Run analysis'
        uses: 'ossf/scorecard-action@62b2cac7ed8198b15735ed49ab1e5cf35480ba46' # v2.4.0
        with:
          results_file: 'results.sarif'
          results_format: 'sarif'
          repo_token: '${{ secrets.SCORECARD_TOKEN }}'
          # Public repositories:
          #   - Publish results to OpenSSF REST API for easy access by consumers
          #   - Allows the repository to include the Scorecard badge.
          #   - See https://github.com/ossf/scorecard-action#publishing-results.
          # For private repositories:
          #   - `publish_results` will always be set to `false`, regardless
          #     of the value entered here.
          publish_results: true

      - name: 'Scan results.sarif to ensure it contains no secrets'
        shell: 'bash'
        # yamllint disable rule:line-length
        run: |
          # fail if:
          # - a variable is unbound
          # - any command fails
          # - a command in a pipe fails
          # - a command in a sub-shell fails
          set -Eeuo pipefail

          # enable debug if runner runs in debug
          [[ "${{ runner.debug }}" -ne 1 ]] || {
            echo "INFO: Enabling bash trace";
            set -x;
          };

          # Specifying the gitleaks-image in the job as Scorecard does not permit top level env vars, see:
          # https://github.com/ossf/scorecard-action#workflow-restrictions
          # renovate image dep:
          gitleaksImage="ghcr.io/gitleaks/gitleaks:v8.18.4@sha256:75bdb2b2f4db213cde0b8295f13a88d6b333091bbfbf3012a4e083d00d31caba"

          docker run -v ./results.sarif:/scan "${gitLeaksimage}" detect --source "/scan" --no-git || {
            echo "ERROR: Secret found, failing workflow";
            exit 1;
          };
        # yamllint enable rule:line-length

      - name: 'Upload artifact'
        uses: 'actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874' # v4.4.0
        with:
          name: 'SARIF file'
          path: 'results.sarif'
          retention-days: 5

      - name: 'Upload to code-scanning'
        uses: 'github/codeql-action/upload-sarif@4dd16135b69a43b6c8efb853346f8437d92d3c93' # v3.26.6
        with:
          sarif_file: 'results.sarif'
...

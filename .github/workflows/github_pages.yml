---
name: 'GitHub pages deployment'
on:  # yamllint disable-line rule:truthy
  push:
    branches:
      - 'main'

    paths:
      - 'docs/**.md'
      - '.github/workflows/github_pages.yml'

  pull_request:
    branches:
      - 'main'

    paths:
      - 'docs/**.md'
      - '.github/workflows/github_pages.yml'

  workflow_dispatch: {}

permissions:
  contents: 'read'

concurrency:
  group: 'ci-${{ github.workflow }}-${{ github.ref }}'
  cancel-in-progress: false

env:
  # Jekyll image to use
  # yamllint disable rule:line-length
  # renovate image dep:
  jekyll-image: 'ghcr.io/sscheib/ansible-role-file_deployment-jekyll:v25.6.17@sha256:cb0856923a53a27a376e9b4c6f03eaf1c90afd5d1b5974d928cdfe629b2d36f6'
  # yamllint enable rule:line-length

  # gitleaks image to use to check files prior to uploading them to prevent sensitive data being leaked
  # yamllint disable rule:line-length
  # renovate image dep:
  gitleaks-image: 'ghcr.io/gitleaks/gitleaks:v8.27.2@sha256:ebfeb6fd4f2c37fa371d3731ebfa662fdf80f93cd37d3b4771bb82263edff8d0'
  # yamllint enable rule:line-length

jobs:
  build:
    name: 'Build documentation'
    runs-on: 'ubuntu-24.04'
    steps:
      - name: 'Harden Runner'
        uses: 'step-security/harden-runner@6c439dc8bdf85cadbbce9ed30d1c7b959517bc49' # v2.12.2
        with:
          egress-policy: 'block'
          allowed-endpoints: >
            api.github.com:443
            ghcr.io:443
            github.com:443
            pkg-containers.githubusercontent.com:443

      - name: 'Checkout the repository'
        uses: 'actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683' # v4.2.2

      - name: 'Build Jekyll site'
        shell: 'bash'
        run: |
          # fail if:
          # - a variable is unbound
          # - any command fails
          # - a command in a pipe fails
          # - a command in a sub-shell fails
          set -Eeuo pipefail

          # enable debug if runner runs in debug
          [[ "${{ runner.debug }}" -ne 1 ]] || {
            echo "INFO: Enabling bash trace";
            set -x;
          };

          # create _site directory with correct permissions
          mkdir "./docs/_site" && \
          sudo chown -R 1000:1000 "./docs/_site"

          # ensure Gemfile and Gemfile.lock have the correct permissions
          sudo chown 1000:1000 "./docs/Gemfile" "./docs/Gemfile.lock"

          # build documentation
          docker run --rm --volume "./docs:/srv/jekyll" "${{ env.jekyll-image }}" \
            bundler exec jekyll build --disable-disk-cache

      - name: 'Scan site directory to ensure it contains no secrets prior to uploading'
        shell: 'bash'
        run: |
          # fail if:
          # - a variable is unbound
          # - any command fails
          # - a command in a pipe fails
          # - a command in a sub-shell fails
          set -Eeuo pipefail

          # enable debug if runner runs in debug
          [[ "${{ runner.debug }}" -ne 1 ]] || {
            echo "INFO: Enabling bash trace";
            set -x;
          };

          docker run -v "./docs/_site:/scan" "${{ env.gitleaks-image }}" detect --source "/scan" --no-git || {
            echo "ERROR: Secret found, failing workflow";
            exit 1;
          };

      - name: 'Upload artifact to pass the build to the deploy job'
        if: "${{ github.event_name != 'pull_request' }}"
        uses: 'actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02' # v4.6.2
        with:
          name: 'jekyll-artifact'
          overwrite: true
          path: './docs/_site/'
          retention-days: 1

  deploy:
    name: 'Deploy documentation to GitHub Pages'
    if: "${{ github.event_name != 'pull_request' }}"
    needs: 'build'
    runs-on: 'ubuntu-24.04'
    permissions:
      id-token: 'write'
      pages: 'write'
    environment:
      name: 'github-pages'
      url: '${{ steps.pages-info.outputs.page_url }}'
    steps:
      - name: 'Harden Runner'
        uses: 'step-security/harden-runner@6c439dc8bdf85cadbbce9ed30d1c7b959517bc49' # v2.12.2
        with:
          egress-policy: 'block'
          allowed-endpoints: >
            api.github.com:443
            ghcr.io:443
            github.com:443
            pkg-containers.githubusercontent.com:443

      - name: 'Download build artifact'
        uses: 'actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093' # v4.3.0
        with:
          name: 'jekyll-artifact'
          path: './docs/_site/'

      - name: 'Gather information about the GitHub pages deployment'
        uses: 'actions/configure-pages@983d7736d9b0ae728b81ab479565c72886d7745b' # v5.0.0
        id: 'pages-info'
        with:
          token: '${{ secrets.GITHUB_TOKEN }}'
          enablement: false

      - name: 'Scan site directory to ensure it contains no secrets prior to uploading'
        shell: 'bash'
        run: |
          # fail if:
          # - a variable is unbound
          # - any command fails
          # - a command in a pipe fails
          # - a command in a sub-shell fails
          set -Eeuo pipefail

          # enable debug if runner runs in debug
          [[ "${{ runner.debug }}" -ne 1 ]] || {
            echo "INFO: Enabling bash trace";
            set -x;
          };

          docker run -v "./docs/_site:/scan" "${{ env.gitleaks-image }}" detect --source "/scan" --no-git || {
            echo "ERROR: Secret found, failing workflow";
            exit 1;
          };

      - name: 'Upload GitHub pages artifact'
        uses: 'actions/upload-pages-artifact@56afc609e74202658d3ffba0e8f6dda462b719fa' # v3.0.1
        with:
          name: 'github-pages'
          path: './docs/_site'
          retention-days: 1

      - name: 'Deploy GitHub pages'
        uses: 'actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e' # v4.0.5
        with:
          token: '${{ secrets.GITHUB_TOKEN }}'
          artifact_name: 'github-pages'
...

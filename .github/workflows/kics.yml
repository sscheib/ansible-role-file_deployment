---
name: 'KICS'
on:  # yamllint disable-line rule:truthy
  pull_request:
    branches:
      - 'main'

  push:
    branches:
      - 'main'

  workflow_dispatch: {}
  schedule:
    - cron: '43 18 * * 4'

permissions: 'read-all'

env:
  # gitleaks image to use to check files prior to uploading them to prevent sensitive data being leaked
  # yamllint disable rule:line-length
  # renovate image dep:
  gitleaks-image: 'ghcr.io/gitleaks/gitleaks:v8.27.2@sha256:ebfeb6fd4f2c37fa371d3731ebfa662fdf80f93cd37d3b4771bb82263edff8d0'
  # yamllint enable rule:line-length

jobs:
  analysis:
    name: 'KICS analysis'
    runs-on: 'ubuntu-24.04'
    permissions:
      # Needed to upload the results to code-scanning dashboard.
      security-events: 'write'
      # Needed to publish results and get a badge (see publish_results below).
      id-token: 'write'
      # Uncomment the permissions below if installing in a private repository.
      # contents: read
      # actions: read

    steps:
      - name: 'Harden Runner'
        uses: 'step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0' # v2.12.0
        with:
          egress-policy: 'block'
          disable-sudo: true
          allowed-endpoints: >
            api.github.com:443
            apk.cgr.dev:443
            cloudflarestorage.com:443
            ghcr.io:443
            github.com:443
            kics.io:443
            packages.wolfi.dev:443
            pkg-containers.githubusercontent.com:443
            registry.npmjs.org:443

      - name: 'Checkout the repository'
        uses: 'actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683' # v4.2.2
        with:
          persist-credentials: false

      - name: 'Create results directory'
        shell: 'bash'
        run: |
          # fail if:
          # - a variable is unbound
          # - any command fails
          # - a command in a pipe fails
          # - a command in a sub-shell fails
          set -Eeuo pipefail

          # enable debug if runner runs in debug
          [[ "${{ runner.debug }}" -ne 1 ]] || {
            echo "INFO: Enabling bash trace";
            set -x;
          };

          mkdir -p results

      - name: 'Run KICS scan'
        uses: 'checkmarx/kics-github-action@c06a133a98c75c2f920014d688015a5fb18095a4' # v2.1.10
        with:
          bom: true
          comments_with_queries: true
          config_path: './kics.config'
          enable_annotations: true
          enable_comments: true
          enable_jobs_summary: true
          output_path: 'results'
          output_formats: 'sarif'
          path: './'
          profiling: 'MEM'


      - name: 'Scan results/resulits.sarif to ensure it contains no secrets'
        shell: 'bash'
        run: |
          # fail if:
          # - a variable is unbound
          # - any command fails
          # - a command in a pipe fails
          # - a command in a sub-shell fails
          set -Eeuo pipefail

          # enable debug if runner runs in debug
          [[ "${{ runner.debug }}" -ne 1 ]] || {
            echo "INFO: Enabling bash trace";
            set -x;
          };

          docker run -v "./results/results.sarif:/scan:ro" "${{ env.gitleaks-image }}" \
            detect --source "/scan" --no-git || {
              echo "ERROR: Secret found, failing workflow";
              exit 1;
          };

      - name: 'Upload artifact'
        uses: 'actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02' # v4.6.2
        with:
          name: 'SARIF file'
          path: 'results/results.sarif'
          retention-days: 5

      - name: 'Upload to code-scanning'
        uses: 'github/codeql-action/upload-sarif@fca7ace96b7d713c7035871441bd52efbe39e27e' # v3.28.19
        with:
          sarif_file: 'results/results.sarif'
...

---
spellchecker: 'aspell'
jobs: 4
matrix:
  - name: 'markdown'
    default_encoding: 'utf-8'
    expect_match: true
    sources:
      - '*.md'

    dictionary:
      wordlists:
        - '.github/spellcheck/wordlist.txt'

      output: '.github/spellcheck/spellcheck.dic'

    aspell:
      # mode: 'markdown'  # this is only supported with aspell 0.60.8, which is not available on RHEL 8
      # see: https://github.com/GNUAspell/aspell/releases/tag/rel-0.60.8
      lang: 'en'
      d: 'en_US'
      ignore-case: true

    pipeline:
      - pyspelling.filters.markdown:
          markdown_extensions:
            - pymdownx.superfences: {}

      - pyspelling.filters.html:
          comments: false
          ignores:
            - ':matches(code, pre)'

      - pyspelling.filters.context:
          context_visible_first: true
          escapes: '\\[\\`~]'
          delimiters:
            # ignore text between inline back ticks
            - open: '(?P<open>`+)'
              close: '(?P=open)'

      - pyspelling.filters.url: {}

  - name: 'ansible'
    default_encoding: 'utf-8'
    expect_match: true
    sources:
      - '**/*.yml'
      - '**/*.yaml'
      - '*.yaml'
      - '*.yml'

    dictionary:
      wordlists:
        - '.github/spellcheck/wordlist.txt'

      output: '.github/spellcheck/spellcheck.dic'
    aspell:
      lang: 'en'
      d: 'en_US'
      ignore-case: true

    pipeline:
      - pyspelling.filters.context:
          context_visible_first: true
          delimiters:
            # ignore nospell lines
            #
            # example:
            #
            # - name: my task name  # nospell
            #
            - open: '(?s).+#(\s+)?.+?nospell(.+?)?'
              close: '$'

            # ignore nospell blocks
            #
            # example:
            #
            # # begin nospell
            #
            # text to exclude
            # from spelling across
            # multiple lines
            #
            # # end nospell
            #
            - open: '(?m)(\s{0,}?)#\s+?begin\s+?nospell$'
              content: '[\S\s]+'
              close: '\1#\s+?end\s+?nospell$'

            # ignore CI/CD tooling arguments
            #
            # examples:
            #
            # # renovate: datasource=pypi
            #
            # # yamllint disable-line rule:line-length
            #
            # # kics-scan disable=6b376af8-cfe8-49ab-a08d-f32de23661a4 - WORKDIR Path Not Absolute
            #
            - open: '(?s)[^\n]#(?:\s+)?(?:yamllint|renovate|kics-scan)[^\n]+?'
              close: '$'

      - pyspelling.filters.context:
          context_visible_first: false
          delimiters:
            # take into account YAML multiline name lines
            #
            # examples:
            #
            # - name: >-
            #     Folded block style with newline trimming at the end
            #
            # - name: >
            #     Folded block style without newline trimming
            #
            # - name: |-
            #     Literal block
            #     style with
            #     newline
            #     trimming
            #
            # - name: |
            #     Literal block style without
            #     newline trimming
            #
            # this matching works until the first fully qualified collection name, e.g.:
            # - ansible.builtin.copy
            # - satellite.redhat.locations
            #
            # or if block: or when: is encountered on the next line
            - open: '(?m)^\s+?-\s+?name:\s+?(?:>|\|)?-?'
              content: '\n\s*([\s\S]+?)(?=\s*(?:[A-Za-z0-9_-]+(?:\.[A-Za-z0-9_-]+)+\.|block:|when:))'
              close: '$'

            # take into account '- name' lines
            #
            # example:
            #
            # - name: 'My task'
            #
            - open: '(?s)^(?:-\s+?name):\s[^>\|]'
              content: '.+?'
              close: '$'

            # take into account any comments
            - open: '(?s)([^\n]+)?#.+?'
              close: '$'

      - pyspelling.filters.url: {}
...

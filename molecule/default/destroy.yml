---
- name: 'Destroy molecule containers'
  hosts: 'molecule'
  gather_facts: false
  tasks:

    - name: 'Stop and remove containers'
      containers.podman.podman_container:
        name: '{{ inventory_hostname }}'
        state: 'absent'
        rm: true
      delegate_to: 'localhost'

    - name: 'Remove potentially stopped containers'
      ansible.builtin.command:
        cmd: 'podman container rm --ignore {{ inventory_hostname }}'
      changed_when: false
      delegate_to: 'localhost'

- name: 'Remove dynamic molecule inventory'
  hosts: 'localhost'
  gather_facts: false
  tasks:
    - name: 'Remove dynamic inventory file'
      ansible.builtin.file:
        path: '{{ molecule_ephemeral_directory }}/inventory/molecule_inventory.yml'
        state: 'absent'

- name: 'Cleanup molecule created containers not in the inventory'
  hosts: 'localhost'
  gather_facts: false
  tasks:

    - name: 'Gather facts about podman containers'
      containers.podman.podman_container_info: {}
      register: '__t_containers'

    - name: 'Stop and remove leftover molecule instance containers'
      containers.podman.podman_container:
        name: '{{ __t_container.Name }}'
        state: 'absent'
        rm: true
      loop: >-
        {{
          __t_containers.containers |
          selectattr('Config.Labels.molecule_instance', 'defined') |
          selectattr('Config.Labels.molecule_instance', '==', 'True')
        }}
      loop_control:
        loop_var: '__t_container'
        label: '{{ __t_container.Name }}'

    - name: 'Remove potentially stopped containers'
      ansible.builtin.command:
        cmd: 'podman container rm --ignore {{ __t_container.Name }}'
      changed_when: false
      loop: >-
        {{
          __t_containers.containers |
          selectattr('Config.Labels.molecule_instance', 'defined') |
          selectattr('Config.Labels.molecule_instance', '==', 'True')
        }}
      loop_control:
        loop_var: '__t_container'
        label: '{{ __t_container.Name }}'
...
